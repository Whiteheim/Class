-- 주석
-- DB를 사용하기 위해 cmd 에서 접근할 수 있지만, SQL의 결과와 Query 검증 등을 위해서
-- 보통의 개발자들은 개발자 툴 이라는 것을 사용함
-- DBeaver(디비버), MySQL - WorkBench, Oracle - SQL Developer
-- 일단 Eclipse로 먼저 숙지 후 넘어가기 

-- 용어정리
--	테이블 (릴레이션) : 데이터 베이스에서 정보를 구분하여 저장하는 기본단위
--						행과 열로 이루어진 데이터의 집합
--	행(Row)	: 테이블을 구성하는 데이터들 중 가로부분
--				튜플(Tuple) or 레코드(Record)라고도 부름
--	열(Column)	: 테이블을 구성하는 데이터들 중 세로부분
--					필드(Field) or 속성(Attribute)라고도 부름
--	스키마(Schema)	: 데이터베이스에서 기본 구조를 정의하는 역할 (구분)
--						테이블의 제목 부분(이름, 나이, 성별)
--						테이블의 Header를 나타내며, 속성과 자료타입을 가짐
-- 인스턴스(Instance)	: 테이블에서 실제로 저장된 데이터의 값
-- 도메인	: 속성(열)이 가질 수 있는 값의 집합
--				특정한 속성에서 사용할 데이터의 범위를 사용자가 정의
--				ex) p_age number(3) : 정수를 3자리 까지 받음
--										3자리를 넘어가면 값이 받아지지 않음
--				ex) p_name varchar2(10 char) : 문자열을 최대 10글자까지 받음
--												그 이상의 문자는 받아지지 않음


-- ***여러 줄을 실행할 때 : 실행 할 줄을 드래그 하여 alt + x 
create table person(
	p_name varchar2(10 char),
	p_age number(3),
	p_gender varchar2(2 char)
);

-- *** 한 줄 실행 : 커서를 그 줄에다 놓고 alt + s
insert into person values('홍길동', 10, '남')
insert into person values('홍길동', 10, '남')
insert into person values('김길동', 20, '여')
insert into person values('최길동', 30, '남')
insert into person values('최길동', 1000, '남') -- age값이 3자리 넘어가서 오류가 남


select * from person;
-- 테이블 구성시에 여러 조건들을 살펴야 함 -> 현재 테이블에서는 '홍길동'이 같은사람으로 인식

-- 다른 인물일 가능성도 있지만, 현재 조건으로는 같은 인물
-- 중복값 삭제
select distinct * from person; -- 중복 값 없앨 때 distinct 사용

select * from tab; -- 테이블 확인
desc person; -- 테이블 구조 확인 (이클립스에서는 불가)

drop table person cascade constraint purge; -- 테이블 삭제

-- 테이블(릴레이션)의 특징
-- 1. 속성은 단일한 값만 가짐
--		각 속성의 값은 도메인에 정의된 값만 가지며, 
--		그 값은 모두 단일한 값이어야 함
--		ex) p_age : 최대 3자리 정수로 된 값만 가지며, 
--					그 값은 여러개의 값이 아닌 단 하나의 값이어야 함

-- 2. 속성은 서로 다른 이름을 가짐
--		-> 각 속성마다 p_name, p_age, p_gender라는 이름을 가지고 있음
--		-> 속성의 이름 중복 생성 x  
-- ex) column 명 중복 오류
create table test(
t_no number(3),
t_no varchar2(10 char)
);

-- 3. 한 속성의 값은 모두 같은 도메인의 값을 가짐
--		-> 1번과 같은 맥락 / p_age : 최대 3자리 정수로 된 값을 가짐

-- 4. 속성의 순서는 상관없음
--		속성의 순서가 달라도 테이블의 스키마는 같음
-- ex)
select * from person;
select p_age, p_gender, p_name from person;
-- 순서가 바뀔 뿐 내용에는 변화 없음

-- 5. 테이블 내에 중복된 Tuple은 허용되지 않음
--		홍길동에 대한 정보가 한 번 더 들어가면 
--		동일한 인물인지 아닌지 판단 불가
--		즉, 모든 Tuple에는 차별성 필요 (생일, 휴대폰 번호 등의 부가적인 정보)
-------------------------------------------------------------------------
-- SQL명령문의 종류

-- 데이터 정의어 (DDL / Data Definition Language)
--		: 테이블이나관계의 구조를 생성하는데 사용
--			Create, Alter, Drop,...등

-- 데이터 조작어 (DML / Data Manipulation Language)
--		: 테이블에 데이터를 검색, 삽입, 수정, 삭제 하는데 사용
--			Select, Insert, Update, Delete,... 등 (CRUD) (Create / Read/ Update)
--	***		Select문 : 질의어 (Query) 

-- 데이터 제어어 (DCL / Data Control Language)
--		: 데이터베이스에 접근하고 객체들을 사용하도록 권한을 주고 회수함
--			Grant(권한 부여), Revoke(권한 회수)등
--			제어어는 DBA(Database Administrator)의 업무

-- 트랜잭션 처리어 (TCL / Transaction Control Language)
--		: DML에 의해 조작된 결과를 최소 작업 단위(트랜잭션)별로 제어하는데 사용
--			Commit, Rollback, Savepoint 등

-- SQL이라는 언어로 DB를 제어 가능
--		DB메이커가 달라도 SQL은 거의 비슷
-- 		대/소문자 구별 x (모두 대문자로 인식)
--		낙타체 구분 x -> 뱀체 사용
-- 		데이터는 대소문자를 구별함
--			"a"와 "A"는 다르다












































