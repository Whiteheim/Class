가상화
	: 물리적인 하드웨어 장치를 논리적인 객체로 추상화 하는 것
	 하나의 하드 웨어를 여러개로 동작 시키거나 반대로 여러개의 장치를 묶어 하나의 장치인 것처럼
	 사용자에게 공유자원으로 제공 가능
	ex) 여러 하드웨어에서 일정 부분 떼어내 하나의 가상 저장장소를 생성

서버리스
	: 서버가 보이지 않는 자동화 상태

google cloud 구성
멀티 리전 > (단일) 리전 > 영역 > (코드)
	     └ 기본 ┘
단일 영역은 없는 개념

영역에 클라우드 구성 시 복수개로 구성함

내결함성 (결함에 대한 내성)
	: 고가용성과의 차이는 인적 개입의 유무 (고가용성은 인적 개입 O)



리눅스 사용자 인터페이스
 1) Text Mode : 기본으로 제공되는 리눅스 터미널 모드
	- CLI (Command Line Interface) / CUI(Character User Interface) / TUI (Text User Interface)

 2) GUI (Graphic Unser Interface) 모드

리눅스 계정
 - 보안을 위해 로그인시 패스워드 요구
 - 유닉스 / 리눅스에서는 기본적으로 세 가지 형태의 계정이 존재
 1) root
	- 관리자 계정 (소유자)
	- 거의 모든 권한 행사 가능, 시스템 관리 목적의 계정

 2) System 계정 
	- 시스템 운영에 사용되는 계정
	- 로그인 불가

 3) 일반 사용자 계정
	- 필요에 따라 생성되는 계정 (root가 생성)
	- 로그인이 허락되는 계정
	- 보안상의 이유로 시스템 사용에 많은 제약을 받음

리눅스 명령어 
	- 대소문자 구분
	- 기본 형태 : 명령어 - 옵션 인수(위치)
	- 명령어 도움 : 명령어 --help


root@goorm:~# pwd
/
root@goorm:/# cd /
root@goorm:/# ls
bin  boot  dev  etc  goorm  goormService  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var  workspace
root@goorm:
/# ls -option -file or directory
/# ls -l 		리스트
/# ls -a 		모든 항목
/# ls *실행파일 	실행
/# ls @파일	바로가기
/# ls -R 		모든 데이터
/# cd 		Change Directory
		cd 뒤에 공백이면 최초의 위치로 감 (~로 이동)
/# cd -		이전 주소 (뒤로가기)
/# cd .		현재 디렉토리에 머무르기
/# pwd 		현재 위치 확인 (print working directory)
PATH
	- 절대경로 : 파일 및 디렉토리 위치를 '/'(루트 디렉토리) 기준으로 표시
	- 상대경로 : 파일 및 디렉토리 위치를 현재 디렉토리 기준으로 표시
	( . : 현재 디렉토리 | .. : 상위(부모) 디렉토리 )

/# mkdir 폴더명 	폴더 생성 (make directory)

/# mkdir 폴더명/폴더명/폴더명/...
		폴더를 연속적으로 만듬 (하위폴더로)

/# touch 파일명 	파일 생성

/# cp 파일명1 파일명2
		파일 복사 (파일1 -> 파일2)
/# mv 파일명 / 폴더명 
		파일을 지정한 폴더로 이동

/# mv 파일명 파일명
		파일명 변경

/# rmdir 	디렉토리 명
		디렉토리 삭제 (비어있어야 함)
/# rmdir -p a/b/c	하위 디렉토리까지 한번에 삭제

/# rm 파일명	파일 삭제
/# rm -r ./디렉토리명/
		디렉토리 삭제 (하위 내용까지 모두 삭제)
/# rm -i ./파일명	파일 삭제 (삭제 여부 확인)
/# rm -f ./파일명 	파일 강제 삭제

/# passwd (계정명)	계정에 비밀번호 설정
/# useradd 계정명	계정 생성

Switch User
/# su 계정명 	계정 변경


환경변수에 파일을 등록하면
컴퓨터 어디에서든지 명령어를 사용 가능
(bin 폴더)

tmp : 임시 파일 저장소, 연습 파일을 만들어 주로 사용

파일 관련 주요 명령어
Concatenate
/# cat 파일명 	파일 읽기
/# cat > a.txt	텍스트 파일에 내용 삽입
		내용 입력 후 ctrl + D (종료)

/# cat a.txt b.txt > c.txt	
		c.txt를 만들어 a , b 파일의 내용을 삽입
/# cat -n c.txt	내용에 번호를 붙혀 출력

/# head (-n 숫자) 파일명
		위에서부터 원하는 수의 행 수 만큼
/# tail (-n 숫자) 파일명
		아래에서부터 원하는 수의 행 수 만큼
/# more 파일명	초과되는 내용은 enter 키 누르면 다음으로 넘어감
/# wc 파일명 	한줄로 내용 표기





















































































 
	