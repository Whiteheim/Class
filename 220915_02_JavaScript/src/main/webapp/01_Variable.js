// JavaScript
// 인터프리터 언어
// 오타가 나지않도록 주의

// 1. 변수
//		: 데이터를 담는 그릇

// 변수에 접근하는 방법 
//		- alert();			: 경고창을 띄워주는 함수
//		- console.log();	: 로그를 띄워주는 함수
//		- document.write;	: 웹페이지에 내용 출력하는 함수

name = "홍길동";
age = 300; // -> "변수명 = 값;"은 위험 , 전역 변수의 형태이기 때문에 변형이 쉬움

// 전역 변수의 형태를 띄지 않기 위해 변수 선언의 형태는 3가지로 나뉨
// var, let, const

// ▶ var : var(iable)
//			변수를 중복 선언 + 초기화 가능
var a = 10; 	// 변수 선언 + 초기화
console.log(a);	// 10
var a = 20;		// 변수 선언 + 초기화
console.log(a); // 20
var a = 30;		// 변수 선언 + 초기화
console.log(a);	// 30
var a;			// 변수 선언 : 마지막에 할당된 값이 변수에 저장이 됨
console.log(a);
// -> 기존에 선언해둔 변수를 잊고 다시 값을 할당하는 경우가 발생 가능

// ▶ let : Java변수 만들때와 같은 느낌 (변수명 중복 사용 불가)
//let name = "홍길동";
//console.log(name);
//let name = "박길동"; // 이미 name 이 홍길동으로 선언되어 있기 때문에 에러 발생
//console.log(name);

// let은 한번 선언한 후에 값은 바꿔줄 수 있음
let grade = "F";
console.log(grade);
grade = "A+";		// 변수명 = 값; 의 형태로 변경이 가능
console.log(grade);

// ▶ const : 값이 절대 바뀌지 않는 상수
//		값 수정 불가, 수정시 에러 발생
//		파이값, 최대/최소값, 생일, 등
//		const의 변수명은 반드시 대문자로 입력 (문화)
const PI = 3.141592;
console.log(PI)
PI = 1.2111421;
console.log(PI)

// 정리
// 		JS에서 변수 선언 시
//		변할 수 있는 값은 var, let
//		변하지 않는 값은 const로 선언

// JS 변수명 짓는 조건(Java와 동일)
//	1. 변수는 문자와 숫자, $, _ 만 사용
//	2. 변수명의 첫 글자로 숫자 사용 X
//	3. 예약어는 사용하지 않음
//	4. 변수명은 읽기 쉽고 누구든 이해가능 하도록 작명
//	5. const 변수를 만들 때 변수명을 대문자로 작명 


















